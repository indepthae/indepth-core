<%-# Fedena
#Copyright 2010 Foradian Technologies Private Limited
#
#This product includes software developed at
#Project Fedena - http://www.projectfedena.org/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License. -%>

<div id="content-header">
  <%= show_header_icon %>
  <h1><%= t('subject') %></h1>
  <div class='header-sep'>|</div>
  <div class='sub-header'><%= t('manage_subject') %></div>
  <div id="inner-tab-menu">
      <ul>
        <li class='themed_bg themed-dark-hover-background'>
          <%= link_to "#{t('subjects_center_text')}", {:controller => "subjects_center", :action => "index"} %>
        </li>
      </ul>
  </div>
  <%= javascript_include_tag render_generic_multi_hook_js %>
</div>
<div id="page-yield">
  <div class="bread_crumb">
    <%= make_breadcrumb %>
    <%= render_breadcrumbs  %>
  </div>
  <div id="flash-box">
    <% unless flash[:notice].nil? %>
      <p class="flash-msg"> <%= flash[:notice] %> </p>
    <% end %>
  </div>
  <div class="box">

    <div class="heading">
      <%= t('manage_subject') %>
    </div>

    <div class="batch_selector">
      <div class="course_batches">
        <div id="courses">
          <div class="label-field-pair">
            <label for="timetable_entry_course_id"><%= t('course') %>
              <%= image_tag("loader.gif",:align => "absmiddle",:border => 0,:id => "loader", :style =>"display: none;" ) %>
            </label>
            <div class="text-input-bg">
              <% selection = @batch.present? ? {:selected => @batch.course_id} : {} %>
              <%= select :course, :id,
                @courses.map {|c| [c.full_name, c.id] },
                {:prompt => t('select_a_course')}.merge(selection),
                {
                :onchange => "#{remote_function(
                :url => { :action => 'update_batch_list' },
                :with => "'course_id='+value",
                :before => "Element.show('loader')",
                :success => "Element.hide('loader')"  )}"} %>
            </div>
          </div>
        </div>
        <div id="batches">
          <%= render :partial => "batch_list" if @batch.present? and @courses.present? %>
        </div>
      </div>     

    </div>
    
    <div id="subjects">
      <%= render :partial => 'subjects_new' if @batch.present?  %>
    </div>
    <div id="modal-box" style="display:none;"></div>

    <div class="extender"></div>
  </div></div>
<script type="text/javascript">
  function hide_normal_table() {
    var rows = 0
    rows = j(".subjects tr").length;
    rows = rows - 1;
    if(rows==1){
      j(".subjects").hide();
      document.getElementById("flash").style.display ="block";
      $('flash').load('subjects/no_subjects');
    }
  }
  function hide_elective_table(id) {
    if(j('tr[data=elective_group-'+id+']').length == 0){
      j('#flash-elective-group-'+id).show();
      j.ajax({
        url: 'subjects/enable_elective_group_delete',
        data: {'id': id},
        success: function(data){
          j('#elective_group-'+id).find('.delete_link').html(data);
        }
      });
    }
  }
  function after_delete(id,school_id) {
    $('subject-'+school_id).remove();
    var rows = 0
    $$('.esubjects-'+id+' tr').each(function(){
      rows++;
    });
    rows = rows - 1;
    if(rows==1){
      j('#del_elec_group-'+id).remove();
      document.getElementById("dele_elec_group-" + id).style.display ="block";
      
    }
  }

  function remove_deleted_elective_group(id){
    j('tr[data=elective_group-'+ id +'],tr[id=elective_group-'+ id +']').remove();
    j('#flash-elective-group-'+ id).remove()
  }
  
  function reset_elective_group_table(){
    if(j('.elective_groups .tr-even,.elective_groups .tr-odd,.elective_groups .elective-head').length == 0){
      j('.elective_groups').remove();
      j('#no_subjects').show();
    }
  }
  
  load_component_delete_method = function(type, course_id, object_id){
      j('.submit-button#yes').on('click', function () {
          j.ajax({
              type: 'DELETE',
              url: '/subjects/delete_component',
              data: {'type':type,'batch_id':course_id,'id':object_id}
          });
      })
  }
  
  
</script>