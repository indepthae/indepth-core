<%-# Fedena
#Copyright 2010 Foradian Technologies Private Limited
#
#This product includes software developed at
#Project Fedena - http://www.projectfedena.org/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License. -%>

<div id="content-header">
    <%= show_header_icon %>
    <h1><%= t('manage_users') %></h1>
    <div class='header-sep'>|</div>
    <div class='sub-header'><%= t('detailed_about_user') %></div>

    <div id="inner-tab-menu">
        <ul>
            <li class='themed_bg themed-dark-hover-background'><%= link_to "#{t('add_new')}", :action => "create" %></li>
        </ul>
    </div>
</div>
<div id="page-yield">
    <div class="bread_crumb">
        <%= make_breadcrumb %>
        <%= render_breadcrumbs  %>
    </div>
    <% unless flash[:notice].nil? %> 
      <p class="flash-msg"> <%= flash[:notice] %> </p> 
    <% end %>
    <div id="search-container">
        <div id="name-sec">
            <div class="label-field-pair" id="search">
                <label for="query"><%= t('search_user') %></label>
                <div class="text-input-bg"><%= text_field_tag "query", params[:query], :autocomplete => 'off', :placeholder => t('name_or_username') %></div>
                <%= image_tag("loader.gif",
                  :align => "absmiddle",
                  :border => 0,
                  :id => "loader",
                  :style =>"display: none;" ) %>
                <div class="div_link" onclick="search_options('user_type')"><%= t('search_by_user_type') %></div>
            </div>
        </div>
        <div id="type-sec">
            <div class="label-radio-pair" id="is_active">
                <label class="status"><%= t('user_type') %></label>
                <span id="loader_div">
                    <%= image_tag("loader.gif",
                      :align => "absmiddle",
                      :border => 0,
                      :id => "loader1",
                      :style =>"display: none;" ) %>
                </span>
                <div class="text-input-bg" id="status_div">
                    <%= radio_button_tag  "user_type", "students", true, :onchange => "fetch_user_filters()" %>
                    <label for="user_type_students"><%= t('multiple_student') %></label>

                    <%= radio_button_tag  "user_type", "parents", false, :onchange => "fetch_user_filters()" %>
                    <label for="user_type_parents"><%= t('parents') %></label>

                    <%= radio_button_tag  "user_type", "employees", false, :onchange => "fetch_user_filters()" %>
                    <label for="user_type_employees"><%= t('employees') %></label>

                    <%= radio_button_tag  "user_type", "admins", false, :onchange => "search_user_ajax('filter')" %>
                    <label for="user_type_admins"><%= t('admins') %></label>
                </div>
                <div class="div_link" onclick="search_options('user_name')"><%= t('search_by_name_or_username') %></div>
            </div>
            <div id="user_filters">
                <%= render :partial => 'user_filters' %>
            </div>
        </div>

    </div>
      
    <div id="user_information"> </div>

</div>
<script type="text/javascript">


  j('#user_information')
  function forced_type_ajax()
  {
    if(j('#name-sec').css('display') == "block")
    {
      search_user_ajax('query');
    }
    else
    {
      search_user_ajax('filter');
    }
  }


  function search_user_ajax(type)
  {
      forced_type = j("[name='forced_type']:checked").val();
      query_value = j('#query').val();
      user_type = j("[name='user_type']:checked").val();
      filter = j('#filter').val();
      if (type == 'query') {
          j('#status_div input').prop('disabled', true);
          if (query_value.include("%"))
              return;
      } else {
          j('#query').val("");
          if ((user_type != 'admins') && (filter == ""))
              return;
      }
      new Ajax.Request('user/search_user_ajax', {
          parameters: {'query': query_value, 'user_type': user_type, 'filter': filter, 'type': type,'forced_type': forced_type},
          asynchronous: true,
          evalScripts: true,
          method: 'get',
          onLoading: function () {
              if (type == 'query')
                  j('#loader').show();
              else {
                  if (user_type == 'admins')
                      j('#loader1').show();
                  else
                      j('#loader2').show();
              }
          },
          onComplete: function (resp) {
              j('#user_information').html(resp.responseText);
              if (type == 'query')
                  j('#loader').hide();
              else
              {
                  if (user_type == 'admins')
                      j('#loader1').hide();
                  else
                      j('#loader2').hide();
              }
              if (type == 'query') {
                  j('#user_filters').html('');
              } else {
                  if (user_type == 'admins')
                      j('#user_filters').html('');
              }
              j('#status_div input').prop('disabled', false);
          }
      });
  }

  function fetch_user_filters() {
      user_type = j("[name='user_type']:checked").val();
      new Ajax.Request('user/user_filters', {
          parameters: {'user_type': user_type},
          asynchronous: true,
          evalScripts: true,
          method: 'get',
          onLoading: function () {
              j('#loader1').show();
              j('#query').val("");
          },
          onComplete: function (resp) {
              j('#user_filters').html(resp.responseText);
              j('#user_information').html('');
              j('#loader1').hide();
          }
      });
  }

  function search_options(type) {

      if (type == "user_name") 
      {
          j('#name-sec').show();
          j('#type-sec').hide();
      } 
      else 
      {
          j('#name-sec').hide();
          j('#type-sec').show();
      }
      j('#user_information').html('');
      j('#query').val("");
      if(type != "user_name")
      {
        user_type = j("[name='user_type']:checked").val();
        if(user_type == "admins")
        {
          search_user_ajax('filter')
        }
        else
        {
          fetch_user_filters();
        }
      }
  }

  function showOptions(el) {
      var flag = hideOptions();
      drop_id = j(el).attr('drop_id')
      if (flag === false){
        document.getElementById('optionDropdown_' + drop_id).classList.toggle("show");
      }
  }

  function hideOptions() {
      var flag = false;
      var dropdowns = document.getElementsByClassName("dropdown-content");
      var i;
      for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
              openDropdown.classList.remove('show');
              flag = true;
          }
      }
      return flag;
  }
  
  window.onclick = function (event) {
      if (!event.target.matches('.dropbtn')) {
          hideOptions();
      }
  }


  j('#query').bind('input', function () {
    if(j('#query').val().length >= 0)
      {
        search_user_ajax('query');
      }
  })
  
  
  
  
  
  
  
  show_confirm = function(el){
      if(j(el).attr('status') == 'unblocked'){
          make_popup_box(el, 'confirm', j(el).attr('confirmation_text'),{'ok' : '<%=t('block_text')%>', 'cancel' : '<%=t('cancel')%>', 'title' : '<%=t('block_user')%>', 'popup_class' : 'delete_confirmation'}); return load_block_method(el);
        }
        else{
          make_popup_box(el, 'confirm', j(el).attr('confirmation_text'),{'ok' : '<%=t('unblock_text')%>', 'cancel' : '<%=t('cancel')%>', 'title' : '<%=t('unblock_user')%>', 'popup_class' : 'delete_confirmation'}); return load_unblock_method(el);
        }
    }
    
    load_block_method = function (el) {
      j('.submit-button#yes').on('click', function () {
        user_id = j(el).attr('user_id')
        query = j(el).attr('query')
        type = j(el).attr('type')
        filter = j(el).attr('filter')
        user_type = j(el).attr('user_type')
        forced_type = j("[name='forced_type']:checked").val();
        page = j(el).attr('page')
        new Ajax.Request('user/block_user', {
          parameters: {'id': user_id,'query': query, 'user_type': user_type, 'filter': filter, 'type': type,'page': page,'forced_type': forced_type},
          asynchronous: true,
          evalScripts: true,
          method: 'POST',
          success: function (resp) {
            console.log(resp);
          },
          onComplete: function (resp) {
              j('#user_information').html(resp.responseText);
              j('#status_div input').prop('disabled', false);
              
          }
        });
        remove_popup_box();
      });
  }
  
  
  
  load_unblock_method = function (el) {
      j('.submit-button#yes').on('click', function () {
        user_id = j(el).attr('user_id')
        query = j(el).attr('query')
        type = j(el).attr('type')
        filter = j(el).attr('filter')
        user_type = j(el).attr('user_type')
        forced_type = j("[name='forced_type']:checked").val();
        page = j(el).attr('page')
        new Ajax.Request('user/unblock_user', {
          parameters: {'id': user_id,'query': query, 'user_type': user_type, 'filter': filter, 'type': type,'page': page,'forced_type': forced_type},
          asynchronous: true,
          evalScripts: true,
          method: 'POST',
          success: function (resp) {
            console.log(resp);
          },
          onComplete: function (resp) {
              j('#user_information').html(resp.responseText);
              j('#status_div input').prop('disabled', false);
          }
        });
        remove_popup_box();
      });
  }

</script>
