<%- # Fedena
#Copyright 2010 Foradian Technologies Private Limited
#
#This product includes software developed at
#Project Fedena - http://www.projectfedena.org/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License.    -%>
<% unless flash[:notice].nil? %>
  <div id="errorExplanation" class="errorExplanation">
      <p><%= t('there_were_pblm') %></p>
      <ul>
          <li><%= flash[:notice] %></li>
      </ul>
  </div>
<% end %>

<% unless flash[:warning].nil? %>
  <p class="flash-msg"><%= flash[:warning] %></p>
<% end %>
<%= render :partial => "finance/fees_payment/fee_collection_student_details" %>

<%= error_messages_for "financefee", :header_message => nil %>

<div class="height-fixer"></div>
<div class="extender"></div>
<% total_fees =0 %>
<% form_remote_for :fees, :id => 'fees_form', :url => {:action => 'fees_submission_save',
  :student => @student.id, :date => @date.id, :fine => @fine, :special_fine => @fine_amount},
  :html => {:id => "fees_form"}, :before => "prev_double()", :complete => "set_back()" do |form| %>

  <% unless @fee_particulars.nil? %>
    <table class="gray_table_list" align="center" width="100%" cellpadding="0" cellspacing="0">
        <tr class="main_head tr-list_head">
            <td class="sl-col"><%= t('sl_no') %></td>
            <td class="set_border_right"><%= t('particulars') %></td>
            <td class="set_border_right" colspan="2">
                <%= t('amount') %>
                (<%= currency %>)
            </td>
        </tr>
        <% i = 0 %>
        <% @total_fine = 0 %>

        <%= render :partial => 'finance/fees_payment/particular_list' %>
        <%= render :partial => 'finance/fees_payment/discount_list', :locals => {:i => i, :total_fees => total_fees} %>
        <% if @financefee.tax_enabled? and @financefee.tax_collections.present? %>
          <%= render :partial => 'finance/fees_payment/tax_list', :locals => {:i => i, :total_tax => total_fees } %>
        <% end %>
        <%= render :partial => 'finance/fees_payment/student_fine_list', :locals => {:i => i, :total_fees => total_fees,
          :payment_date=> @transaction_date} %>
        <% total_fees1 = 0 %>
        <% unless @particular_wise_paid %>
          <% if !@financefee.is_paid_with_fine? and @due_date.to_date < @transaction_date and @fine.nil? %>
            <tr class="row-a add_fine_row">
                <td></td>
                <td class="set_border_right col-2 fine_text align_right">
                    <label><%= "#{t('due_date_has_been_exceeded')}"%></label>
                </td>
                <td>
                    <div class="instant-particular">
                        <%= link_to_remote '+ Add Fine', :url => {
                          :controller => "finance",
                          :action => "fees_submission_student", "id" => @student.id,"add_fine"=>1,"date"=> @date.id,
                          :current_action => @target_action,
                          :current_controller=>@target_controller,
                          :transaction_date=>@transaction_date
                          },
                          :method=>:get %>
                    </div>
                </td>
                <td class="cancel-disc"></td>
            </tr>
          <% end %>
        <% end %>

        <% balance = @financefee.balance.to_f + @fine.to_f %>
        <% @total_amount_to_pay = balance + @fine_amount.to_f %>

        <%= render :partial => 'finance/fees_payment/summary',
          :locals => {:i => i, :total_fine => @total_fine.to_f} %>

        <tr class="row-a">
            <td colspan="4">
              <% if @student.advance_fee_wallet.present? and @total_amount_to_pay > 0 %>
                <div class="wallet-section">
                      <div class="wallet-amount-block">
                          <label><%= t('advance_applied') %> </label>
                          <div class="text-input-bg4">
                              <%= form.text_field :wallet_amount, {:value => 0.00, :class => "wallet-amount-applied", :precision => 2} %>
                          </div>
                      </div>
                      <div class="wallet-info-block">
                        <label><%= t('advance_fees_collected')%></label>
                        <div class="text-input-bg4">
                            <%= text_field :student_wallet_amount,'', {:value => precision_label(@student.advance_fee_wallet.amount),
                              :class => "wallet-amount-field", :precision => 2, :readonly => true} %>
                        </div>
                        <%= label_tag '', t('apply_advance'), {:class => "wallet-link user_button1"} %>
                        <div class="" style="display: none;">
                          <%= form.hidden_field :wallet_amount_applied , :value => false %>
                        </div>
                      </div>
                </div>
                <% end %>
                <% if !(@financefee.is_paid_with_fine? or precision_label(balance + @fine_amount.to_f).to_f <= 0)%>
                  <div class="payment_details">
                      <div class="label-field-pair3 payment_mode_block">
                          <label>
                              <%= t('payment_mode') %>
                              <%= image_tag("loader.gif", :align => "absmiddle",
                                :border => 0, :id => "loader1",
                                :style => "display: none;") %>
                          </label>
                          <div class="text-input-bg3">
                              <%= render :partial => "finance/fees_payment/payment_modes",
                                :locals => {:form_obj => :fees} %>
                          </div>
                      </div>

                      <div id="payment_mode">
                          <div id="payment_mode_details">
                              <% if params[:payment_mode] == 'Others'%>
                                <%= render :partial=>'finance/fees_payment/select_payment_mode',:locals =>
                                  {:mode=> params[:others_payment_mode]} %>
                              <% end %>
                          </div>
                      </div>

                      <div class="reference_no">
                          <label><%= t('reference_no') %> </label>
                          <div class="text-input-bg4">
                              <%= form.text_field :reference_no, :value => params[:reference_no],
                                :disabled => @particular_wise_paid%>
                          </div>
                      </div>

                      <div class="amount_to_pay_block">
                          <label><%= t('amount_to_pay') %> </label>
                          <div class="text-input-bg4">
                              <%= form.hidden_field :fees_paid,
                                :value => precision_label(balance+@fine_amount.to_f),
                                :class => 'precision_text payment', :readonly => true, :disabled => @particular_wise_paid %>
                                <%= form.text_field :fees_paid_t,
                                  :value => precision_label(balance+@fine_amount.to_f),
                                  :class => 'precision_text payment_t', :disabled => @particular_wise_paid %>
                              <%= hidden_field_tag :total_fees, total_fees1,
                                :disabled => @particular_wise_paid %>
                          </div>
                      </div>

                  </div>
                <% else %>
                  <script type="text/javascript">
                    j('.add_fine_row').hide();
                  </script>
                <% end %>
                  <%= hidden_field_tag :fine_waiver_val, @fine_waiver_val%>
                <div class="pay_fees">

                    <% if !(@financefee.is_paid_with_fine? or precision_label(balance + @fine_amount.to_f).to_f <= 0)%>

                      <%= transaction_date_field(@transaction_date,:onchange=> (<<-CODE
          j.post('/finance/fees_submission_student',{date: #{@date.id},id:#{@student.id},
          fine_amount:#{@fine.nil? ? 0 : @fine},transaction_date: j('#transaction_date').val(),
          payment_mode: j('#fees_payment_mode').val(),payment_note:j('#fees_payment_note').val(),
          reference_no:j('#fees_reference_no').val(),others_payment_mode: j('.others_payment_mode').val()})
                        CODE
                        )); %>

                      <div class="payment_notes">
                          <label><%= t('payment_notes') %> </label>
                          <div class="textarea-input-bg3">
                              <%= form.text_area :payment_note, :cols => 50,
                                :rows => 1, :value => params[:payment_note],
                                :disabled => @particular_wise_paid %>
                          </div>
                      </div>
                      <div class="pay_fees_buttons">

                          <%= hidden_field_tag :session_fingerprint, session_fingerprint%>

                          <% if !@particular_wise_paid and @financial_year_enabled %>
                            <%= submit_tag "â–º #{t('pay_fees')}",
                              :class => 'submit_button', :id => 'submit_button',
                              :onClick => "return validate_payment_mode()" %>
                          <% end %>

                          <%= link_to "â–º #{t('print_summary')}",
                            {:controller => "finance", :action => "student_fee_receipt_pdf",
                            :id => @student.id, :id2 => @date.id}, :target => '_blank',
                            :class => 'user_button' unless @trans.nil? %>

                          <%= link_to "â–º #{t('print_summary')}", {:controller => "finance",
                            :action => "student_fee_receipt_pdf", :id => @student.id,
                            :id2 => @date.id, :batch_id => @financefee.batch_id},
                            :target => '_blank', :class => 'user_button' %>
                      </div>

                    <% else %>

                      <div class="pay_fees_buttons">
                          <h4><%= t('fees_paid') %></h4>
                          <%= link_to "â–º #{t('print_summary')}", {:controller => "finance",
                            :action => "student_fee_receipt_pdf", :id => @student.id,
                            :id2 => @date.id, :batch_id => @financefee.batch_id},
                            :target => '_blank', :class => 'user_button' %>
                      </div>

                    <% end %>
                </div>
            </td>
        </tr>
      <% end %>
  </table>
<% end %>

<%= render :partial => 'finance/fees_payment/paid_fees',
  :locals => {:batch_id => @financefee.batch_id,
  :delete_action => "delete_transaction_for_student"} %>

<script type="text/javascript">

  precision = parseInt("<%= @precision %>");

  j('.payment_t').change(function () {
    var amount_to_pay = <%= precision_label(@total_amount_to_pay) %>
    var wallet_amount_applied = parseFloat(j('.wallet-amount-applied').val())
    var total_wallet_amount = <%= @student.advance_fee_wallet.nil? ? "0.00" : @student.advance_fee_wallet.amount %>
    if (total_wallet_amount == (0).toFixed(precision)){
      if (parseFloat(j('.payment_t').val()) > amount_to_pay) {
        j('.payment_t').val(parseFloat(amount_to_pay).toFixed(precision))
        j('.payment').val(parseFloat(amount_to_pay).toFixed(precision))
      } else {
        j('.payment').val(parseFloat(j('.payment_t').val()).toFixed(precision))
        j('.payment_t').val(parseFloat(j('.payment_t').val()).toFixed(precision))
      }
    } else {
      if (parseFloat(j('.payment_t').val()) > amount_to_pay){
        j('.payment_t').val(parseFloat(amount_to_pay).toFixed(precision))
        j('.payment').val(parseFloat(amount_to_pay).toFixed(precision))
        j('.wallet-amount-field').val(parseFloat(total_wallet_amount).toFixed(precision))
        j('.wallet-amount-applied').val(parseFloat(0.00).toFixed(precision))
      } else if (parseFloat(j('.payment_t').val()) > parseFloat(j('.wallet-amount-applied').val())) {
        j('.payment_t').val(parseFloat(j('.payment_t').val() - j('.wallet-amount-applied').val()).toFixed(precision))
        j('.payment').val((parseFloat(j('.payment_t').val()) + parseFloat(j('.wallet-amount-applied').val())).toFixed(precision))
      } else if (parseFloat(j('.payment_t').val()) < parseFloat(j('.wallet-amount-applied').val())) {
        j('.wallet-amount-applied').val(parseFloat(j('.payment_t').val()).toFixed(precision))
        j('.wallet-amount-field').val(parseFloat(total_wallet_amount - j('.wallet-amount-applied').val()).toFixed(precision))
        j('.payment_t').val(parseFloat(0.00).toFixed(precision))
        j('.payment').val(parseFloat(j('.wallet-amount-applied').val() + j('.payment_t').val()).toFixed(precision))
      } else if (parseFloat(j('.payment_t').val()).toFixed(precision) == (0).toFixed(precision)){
          j('.payment').val(parseFloat(j('.payment_t').val()).toFixed(precision));
          j('.payment_t').val(parseFloat(0).toFixed(precision));
      }
    }
    update_payment_mode();
  });

  j(".wallet-amount-applied").change(function() {
    var amount_to_pay = <%= precision_label(@total_amount_to_pay) %>
    var total_wallet_amount = <%= @student.advance_fee_wallet.nil? ? "0.00" : @student.advance_fee_wallet.amount %>
    j('.wallet-link').css('pointer-events', 'none')
    if (parseFloat(j('.wallet-amount-applied').val()) > total_wallet_amount){
      j('.wallet-amount-field').val(parseFloat(total_wallet_amount).toFixed(precision))
      j('.wallet-amount-applied').val(parseFloat(0.00).toFixed(precision))
      j('.payment_t').val(parseFloat(amount_to_pay).toFixed(precision))
      j('.payment').val(parseFloat(amount_to_pay).toFixed(precision))
    } else {
      if (parseFloat(j('.wallet-amount-applied').val()).length == 0 || parseFloat(j('.wallet-amount-applied').val()) == 0) {
        j('.wallet-amount-applied').val(parseFloat(0.00).toFixed(precision))
        j('.wallet-amount-field').val(parseFloat(total_wallet_amount).toFixed(precision))
        j('.payment_t').val(parseFloat(amount_to_pay).toFixed(precision))
        j('.payment').val(parseFloat(amount_to_pay).toFixed(precision))
      } else {
        if (parseFloat(j('.wallet-amount-applied').val()) > parseFloat(j('.payment_t').val())){
          j('.wallet-amount-applied').val(parseFloat(j('.payment_t').val()).toFixed(precision))
          j('.wallet-amount-field').val(parseFloat(total_wallet_amount - j('.wallet-amount-applied').val()).toFixed(precision))
          j('.payment_t').val(parseFloat(0.00).toFixed(precision))
          j('.payment').val(parseFloat(j('.payment_t').val() + j('.wallet-amount-applied').val()).toFixed(precision))
        } else {
          j('.wallet-amount-field').val(parseFloat(total_wallet_amount - j('.wallet-amount-applied').val()).toFixed(precision))
          j('.payment_t').val(parseFloat(amount_to_pay - j('.wallet-amount-applied').val()).toFixed(precision))
          j('.payment').val((parseFloat(j('.payment_t').val()) + parseFloat(j('.wallet-amount-applied').val())).toFixed(precision))
        }
      }
    }
    if (parseFloat(j(".wallet-amount-applied").val()) > 0){
      j('#fees_wallet_amount_applied').val(true)
    }else {
      j('#fees_wallet_amount_applied').val(false)
    }
    update_payment_mode();
  });

  j(".wallet-amount-applied").keypress(function(event) {
     if (!event.charCode) return true;
     ch = String.fromCharCode(event.charCode);
     return (/[\d]/.test(ch));
 });


  j('.wallet-link').click(function() {
    j('.wallet-link').css('pointer-events', 'none')
      var amount_to_pay = ('<%= precision_label(@total_amount_to_pay) %>')
      var total_wallet_amount = ('<%= @student.advance_fee_wallet.amount unless @student.advance_fee_wallet.nil? %>')
      if (parseFloat(amount_to_pay) < parseFloat(total_wallet_amount)){
        j('.wallet-amount-applied').val(amount_to_pay)
        j('.wallet-amount-field').val((parseFloat(total_wallet_amount) - amount_to_pay).toFixed(precision))
        j('.payment_t').val((0).toFixed(precision))
        j('.payment').val((parseFloat(j('.payment_t').val()) + parseFloat(j('.wallet-amount-applied').val())).toFixed(precision))
      } else {
        j('.wallet-amount-applied').val(parseFloat(total_wallet_amount).toFixed(precision))
        j('.wallet-amount-field').val((parseFloat(total_wallet_amount) - parseFloat(j('.wallet-amount-applied').val())).toFixed(precision))
        j('.payment_t').val((amount_to_pay - parseFloat(j('.wallet-amount-applied').val())).toFixed(precision))
        j('.payment').val((parseFloat(j('.payment_t').val()) + parseFloat(j('.wallet-amount-applied').val())).toFixed(precision))
      }
      if (parseFloat(j(".wallet-amount-applied").val()) > 0){
        j('#fees_wallet_amount_applied').val(true)
      }else {
        j('#fees_wallet_amount_applied').val(false)
      }
      update_payment_mode();
  });

  update_payment_mode = function () {
    if (parseFloat(j('.payment_t').val()) > 0){
      // j('#fees_payment_mode').val("Cash").change();
      j('#fees_payment_mode').css('pointer-events', 'auto')
    } else if ((parseFloat(j('.payment_t').val()) <= 0) && (parseFloat(j('.wallet-amount-applied').val()) > 0 )){
        j('#fees_payment_mode').val("Advance Fees").change();
        j('#fees_payment_mode').css('pointer-events', 'none')
      }
  }

  j(document).undelegate(".fine-deletion", "click");
  j(document).undelegate(".auto-fine-deletion", "click");

  j("form").submit(function () {
      j('#submit_button').attr('disabled', 'disabled');
      j('#submit_button').val('<%=t('please_wait') %>');
  });

  j("form").bind('ajax:complete', function () {
      j('#submit_button').removeAttr('disabled');
      j('#submit_button').val('<%="â–º #{t(' pay_fees ')}" %>');

  });

  j(document).click(function (e) {
      j('div#revert-pop-up').hide();
  });

  j(function () {
      j('.inactive-delete').hover(function (e) {
          var moveLeft = 0;
          var moveDown = 0;
          var moveLeft = ((j(this).position().left) + (j(this).width()) / 2);
          var moveDown = (j(this).position().top) - 35;
          trans_details_show(moveLeft, moveDown, this);
      }, function () {
          j('div#revert-pop-up').hide();
      });
  });

  function trans_details_show(moveLeft, moveDown, e) {
      var rtl = "<%= (rtl?) ? 'rtl' : 'ltr'  %>";
      if (rtl == 'rtl') {
          left_index = -40;
      } else {
          left_index = -285;
      }
      moveLeft = moveLeft + left_index;
      j('div#revert-pop-up').delay(350).show(0);
      moveDown = moveDown - (j('div#revert-pop-up').height());
      j("div#revert-pop-up").css('top', moveDown).css('left', moveLeft);
  }

  j("#submit_button").click(function (e) {
      var precision = parseInt("<%= @precision %>");
      amount_paying = parseFloat(j("#fees_fees_paid").val());
      payment_done = parseFloat(j(".payment_done").text());
      amount_to_pay = parseFloat(j(".amount_to_pay").text());
      total_fees = parseFloat(j(".total_fees").text());
      if ((amount_paying > (total_fees - payment_done)) && amount_paying != amount_to_pay) {
          alert("can't do partial payment for fine");
          j("#fees_fees_paid").val(amount_to_pay.toFixed(precision));
          e.preventDefault();
      }
  });

  j(document).delegate('.fine-deletion', 'click', function (e) {
      student = j(this).attr('student');
      batch_id = j(this).attr('batch_id');
      date = j(this).attr('date');
      proceed = confirm('<%=t('delete_confirm_msg') %>');
      if (proceed) {
          j.ajax({
              method: "post",
              url: '/finance/fees_submission_student',
              data: {
                  "fine[student]": student,
                  "fine[batch_id]": batch_id,
                  "fine[date]": date
              }

          });
      }
  });

  j(document).delegate('.auto-fine-deletion', 'click', function (e) {
      student = j(this).attr('student');
      batch_id = j(this).attr('batch_id');
      date = j(this).attr('date');
      proceed = confirm('<%=t('delete_confirm_msg') %>');
      if (proceed) {
          j.ajax({
              method: "post",
              url: '/finance/update_student_auto_fine_ajax',
              data: {
                  "fine[student]": student,
                  "fine[batch_id]": batch_id,
                  "fine[date]": date,
                  "fine[is_fine_waiver]": "true"
              }

          });
      }
  });

  if (j('.flash-msg').length > 0) {
      j('#fees_detail').css('padding-top:0px');
  }

</script>
