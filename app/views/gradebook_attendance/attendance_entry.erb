<%-# Fedena
#Copyright 2018 Foradian Technologies Private Limited
#
#This product includes software developed at
#Project Fedena - http://www.projectfedena.org/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License. -%>

<div id="content-header">
    <%= show_header_icon %>
    <h1><%= t('gradebook') %></h1>
    <div class='header-sep'>|</div>
    <div class='sub-header'><%= t('gradebook_attendance') %></div>
</div>
<div id="page-yield">
    <div class="bread_crumb">
        <%= breadcrumb :gradebook_attendance_attendance_entry, [@course,@academic_year] %>
        <%= render_breadcrumbs  %>
    </div>
    <div class="details">
        <div class="left">
            <div class="clm">
                <div class="label"><%="#{t('course_text')}"%></div>
                <div class="value"><%=@course.full_name%></div>
            </div>
            <div class="clm">
                <div class="label"><%=t('academic_year')%></div>
                <div class="value"><%=@academic_year.name%></div>
            </div>
        </div>
    </div>
    <div id="flash"></div>
    <span id="info-symbol"></span>
    <p class="info"><%= t('attendance_info_msg1') %></p>
    <div class="gradebook_attendance_form">
        <% remote_form_for :gradebook_attendance ,:url=>{:action=>'list_students'} ,:loading => "$('loading').show();", :loaded => "$('loading').hide();" do |f| %>
          <div class="selectors">
              <div id="select_batch" class="selector">
                  <div class="label-field-pair">
                      <div class="label">
                          <label for="batch_id" class="label-batch"><%= t('batch') %></label>
                      </div>
                      <span class="batch_selector">
                          <%= f.select :batch, @batches.map{|b| [b.name, b.id]},
                            {:include_blank=>t('select_batch')},
                            {:onChange => "#{remote_function(:url => {:action => "load_types"},
                            :with => "'batch_id='+ value +'&assessment_plan_id=#{params[:assessment_plan_id]}'"
                            )}"}
                        %>
                      </span>
                  </div>
              </div>
              <div id="select_type" class="selector">
                  <div class="label-field-pair">
                      <div class="label">
                          <label for="batch_id" class="label-batch"><%= t('type') %></label>
                      </div>
                      <span class="batch_selector">
                          <%= f.select :report_type, [],
                            {:include_blank=>t('select_type')} %>
                      </span>
                  </div>
              </div>
              <div id="select_subtype" class="selector">

              </div>
          </div>
          <div id="view_btn" class="submit_btn">

          </div>
        <% end %>
    </div>
    <div id="attendance_entry"></div>
</div>
<script type="text/javascript">
  var error_entries = new Array();
  function set_total_working_days(obj) {
      j('.total_working_days').each(function(id,elm){
        j(elm).val(obj.value);
        var student_id = parseFloat(j(elm).attr('student_id'));
        validate_attendance(student_id,elm);
      });
      
  }

  makeError = function (s_id, msg) {
      j('.present_' + s_id).siblings('.error-icon').remove();
      j('.present_' + s_id).addClass("error-field");
      icon = j('<div></div', {'class': 'error-icon'});
      icon.attr('tooltip', msg);
      j('.present_' + s_id).parent().append(icon);
  };
  removeError = function (s_id) {
      j('.present_' + s_id).siblings('.error-icon').remove();
      j('.present_' + s_id).removeClass("error-field");
      idx = error_entries.indexOf(s_id);
      if (idx >= 0){
          
          error_entries.splice(idx, 1);
        }
      submit_check();
  };
  validate_attendance = function (s_id, elm) {
      curr_id = s_id;
      var total_working_days = parseFloat(j('.total_' + s_id).val());
      var total_days_present = parseFloat(j('.present_' + s_id).val());
      if ((total_working_days < total_days_present) || (isNaN(total_working_days) && total_days_present >= 0)) {
          makeError(s_id, '<%= t('wrong_attendance_entry_msg') %>');
          if (j.inArray(curr_id, error_entries) === -1) {
              error_entries.push(curr_id);
          }
      } else {
          removeError(s_id);
          //if (j.inArray(curr_id, error_entries) !== -1) {
            //  error_entries.splice(error_entries.indexOf(curr_id), 1);
          //}
      }
      submit_check();
      j('.flash-msg').css('display','none');
  }

  submit_check = function () {
      if (error_entries.length > 0)
          j('.attendance-submit-button').attr('disabled', 'disabled');
      else
          j('.attendance-submit-button').removeAttr('disabled');
  }
  
  function isNumberKey(evt, element, s_id) {
      var total_working_days = parseFloat(j('.total_' + s_id).val());
      if (isNaN(total_working_days)) {
          var charCode = (evt.which) ? evt.which : evt.keyCode
          if (charCode === 8)
              return true;
          return false;
      }
      return isDigit(evt, element);

  }
  function isDigit(evt, element) {
      var charCode = (evt.which) ? evt.which : evt.keyCode
      if ((charCode != 46 || j(element).val().indexOf('.') != -1) && (charCode < 48 || charCode > 57))
      {
          if (charCode === 8)
              return true;
          return false;
      }
      return true;
  }

</script>