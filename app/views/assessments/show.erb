<%-# Fedena
#Copyright 2010 Foradian Technologies Private Limited
#
#This product includes software developed at
#Project Fedena - http://www.projectfedena.org/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License. -%>



<div id="content-header">
    <%= show_header_icon %>
    <h1><%= t('gradebook') %></h1>
    <div class='header-sep'>|</div>
    <div class='sub-header'><%= t('manage_gradebook') %></div>
    <% if !@all_activated and (@type.subject_attribute or @type.activity) and permitted_to? :activate_exam , :assessments %>
      <div id="inner-tab-menu">
          <ul>
              <li class='themed_bg themed-dark-hover-background'><%= link_to "#{t('activate_exams_for_batches')}", {:action=>'activate_exam', :assessment_group_id=>@assessment_group.id,:course_id=>@course.id} %></li>
          </ul>
      </div>
    <% end %>
    <div id="inner-tab-menu">
        <ul>
            <% if !@all_activated and @type.subject and permitted_to? :schedule_dates , :assessments %>
              <li class='themed_bg themed-dark-hover-background'>
                  <%= link_to "#{t('add_exams')}", {:controller => "assessments", :action => "schedule_dates", :id => @assessment_group.id, :course_id => @course.id} %>
              </li>
            <% end %>
            <% if @assess_active and @type.subject and permitted_to? :exam_timings , :assessments %>
              <li class='themed_bg themed-dark-hover-background'>
                  <%= link_to "#{t('exam_timetable')}", {:controller => "assessments", :action => "exam_timings", :group_id => @assessment_group.id, :course_id => @course.id} %>
              </li>
            <% end %>
           
        </ul>
    </div>
</div>
<div id="page-yield">
    <div class="bread_crumb">
        <% breadcrumb :assessments_show, [@assessment_group,@academic_year,@course] %>
        <%= render_breadcrumbs  %>
    </div>
    <div id="flash"></div>
    <% unless flash[:notice].nil? %>
      <p class="flash-msg"> <%= flash[:notice] %> </p>
    <% end %>
    <div class="assessments_box">
        <div class="assessments_head">
            <div class="left">
                <label><%=t('exam_group')%></label>
                <span><%= @assessment_group.name_with_code %></span>
            </div>
            <div class="right">
                <label><%=t('status')%></label>
                <span><%=@assess_active ? t('active') : t('inactive')%></span>
            </div>
        </div>
        <div class="assessments_details">
            <%= render :partial=> 'assessment_group_details', :locals => {:batches => @all_batches} %>
        </div>
        <% if @all_batches.present? %>
          <div class="batches_assessments_list">
              <% @all_batches.each do |batch| %>
                <%= render :partial => 'batch_assessment_list', :locals=>{:batch=>batch} %>
              <% end %>
          </div>
        <% else %>
          <p class="flash-msg"> <%= t('no_batches_in_the_acedemic_year') %> </p>
        <% end %>
    </div>
</div>
<script type="text/javascript">
  var subject_list = new Array();
  function unlock_subject(obj) {
      var subject_id = j(obj).attr('subject_id');
      subject_list.push(subject_id);
      j(obj).attr('disabled', true);
      j(obj).addClass('disabled');
      j('.reset_' + subject_id).css('display', 'block');
  }
  function reset_subject(obj) {
      var subject_id = j(obj).attr('value');
      subject_list.remove(subject_id);
      j('#unlock_' + subject_id).removeClass('disabled');
      j('.reset_' + subject_id).css('display', 'none');
  }
  Array.prototype.remove = function () {
      var what, a = arguments, L = a.length, ax;
      while (L && this.length) {
          what = a[--L];
          while ((ax = this.indexOf(what)) !== -1) {
              this.splice(ax, 1);
          }
      }
      return this;
  };
  function unlockSubjects(agb_id) {
      remove_popup_box();
      j.ajax({
          type: 'POST',
          url: '/assessments/unlock_subjects',
          data: {
              subject_list: subject_list,
              agb: agb_id
          }
      });
  }

</script>