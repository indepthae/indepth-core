<% unless rtl? %>
  <%= stylesheet_link_tag ("payroll_categories/formulas") %>
<% else %>
  <%= stylesheet_link_tag ("rtl/payroll_categories/formulas") %>
<% end %>
<div id="content-header">
  <%= show_header_icon %>
  <h1><%= t('hr_management') %></h1>
  <div class='header-sep'>|</div>
  <div class='sub-header'><%= t('payroll_groups') %></div>
  <div id="inner-tab-menu">
    <ul>
      <% if (permitted_to? :destroy, :payroll_groups ) && @payroll_group.check_dependency_and_delete %>
        <li class='themed_bg themed-dark-hover-background'><%= link_to t('delete'), {:action => "destroy", :controller => "payroll_groups", :id => @payroll_group.id}, :method => :delete, :confirm => t('delete_confirm_msg') %></li>
      <% end %>
    </ul>
  </div>
</div>



<div id="page-yield">
  <div class="bread_crumb">
    <% breadcrumb :payroll_groups_edit, @payroll_group%>
    <%= render_breadcrumbs  %>
  </div>

  <h3><%= t('edit_payroll_group') %></h3>
  <div class="description" id="payroll_group_desc"><%= t('payroll_group_description') %></div>

  <% form_for @payroll_group do |c| %>
    <%= render :partial => "payroll_group_form" , :locals => {:f => c}%>
    <%=submit_tag "#{t('update')}", :disable_with => "#{t('please_wait')}", :class => "submit-button"  %>
  <% end %>
  <%= link_to t('cancel'), payroll_groups_path, :class => "submit-button", :id => "cancel-link" %>
</div>


<script type ="text/javascript">
  show_period_option();
  disable_salary_preferences();
  soratble();
  hideExistingCategory();
  selectedCategoryStyle();
  categoryListStyle();
  displayEmptyMsgs();
  if(<%= params[:action] == "update"%>)
  retainDependancyError();
  
  function disable_salary_preferences(){
    employees = <%= @payroll_group.employee_salary_structures.count > 0 %>
    if (employees){
      j("#payroll_group_payment_period").attr("disabled","disabled");
      j("#payroll_group_salary_type").attr("disabled","disabled");
      j("#payroll_group_generation_day").attr("disabled","disabled");
      j('#generation_day').attr("disabled","disabled");
    }
  }
  function reload_payslip_generation(elm)
  {
    new Ajax.Request('/payroll_groups/payslip_generation',{
      parameters:{'payment_period': elm.value, 'generation_day': '<%=  @payroll_group.generation_day %>'},
      asynchronous:true,
      evalScripts:true,
      method:'post',
      onLoading: function(){
        j('#loader').show();
      },
      onComplete:function(resp){
        j('#loader').hide();
        j('#payment_periods').html(resp.responseText);
        show_period_option();
      }
    });
  }
  function render_formula_partial(elm, object_name, object_id, object_type)
  {
    new Ajax.Request('/payroll_categories/hr_formula_form',{
      parameters:{'formula_type': elm.value, 'object_name' : object_name, 'object_id' : object_id, 'object_type' : object_type},
      asynchronous:true,
      evalScripts:true,
      method:'post',
      onLoading: function(){
        j('#loader1').show();
      },
      onComplete:function(resp){
        j('#fields').html(resp.responseText);
        if((elm.value == "3") || (elm.value == "2"))
        {
          j('.formula_help').show();
          set_tab_height();
        }
        else
          j('.formula_help').hide();
        j('#loader1').hide();
      }
    });
  }
  function remove_fields(link){
    $(link).previous("input[type=hidden]").value='1';
  }
</script>